1. input.txt 내용 요약
첫번째줄은 전체 미로의 개수
그리고 각 미로를 나타내는 행렬의 바로 윗 줄은 행 크기, 열 크기 순으로 나열되어 있고,
바로 밑 줄부터는 미로를 나타내는 0과 1로 구성된 행렬이 있다.

2. 그라운드 룰
0) 재귀호출로 구현해야 한다.
1) 0은 갈 수 없는 길, 1은 갈 수 있는 길
2) 왼쪽으로 갈 수 없고, 갈 수 있는 방향은
위쪽, 오른쪽, 아래쪽이다.
3) 한번 간 곳은 다시 갈 수 없다.

3. 목표
맨 왼쪽 위에서 출발하여 맨 오른쪽 아래에 도달해야 한다.

4. 결과물 출력
1번) 경로가 없으면 0, 있으면 1 쓰기
2번) 경로 개수 쓰기
output.txt 생성하여 결과물 만들기
---
프로그램 계획
*** 오른쪽으로 가면 갈 수 있는 열이 좁아지게 된다!
*** 시작점에서 갈 수 있는 방향은 무조건 최대 2가지뿐
*** 사거리로 가게 되면 방향은 세 가지가 된다 (위, 오른, 아래)
1. input.txt에서 파일 가져오기
**
basic logic
1) 현재 열에서, 더 위로 또는 아래로 내려갈 수 있는가? (행이 최대인가?)
1-1) 현재 열에서 처음에 위나 아래 중 하나로 가는 경우, 갔던 방향의 반대 방향으로는 갈 수 없다. (ex) 아래로 간다면, 아래 혹은 오른쪽으로만 갈 수 있다. 위로는 못 간다.
2) 현재 행에서, 더 오른쪽으로 갈 수 있는가? (옆으로 갈 수 있는 열이 더 있는가? 없다면 아래로 내려갈 수밖에 없음)

-> 아이디어
1. 지나갈 수 있는 길이면 1, 지나갈 수 없는 길이면 0이잖아
그러면 이미 지나온 길을 0으로 바꾸면 되지 않을까?
2. 그리고 그 다음에 이동할 길을 선택한다고 할 때,
위쪽이면 (row - 1, col), 오른쪽이면 (row, col + 1), 아래쪽이면 (row + 1, col)이라고
표현할 수 있다.
3. 그럼 여기서 조건문 3개 제시할 수 있음
 1) if (arr[row - 1][col] == 1) then position = arr[row - 1][col];
 2) if (arr[row][col + 1] == 1) then position = arr[row][col + 1];
 3) if (arr[row + 1][col] == 1) then position = arr[row + 1][col];